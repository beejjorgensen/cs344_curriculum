// This part to include in student submission

#include <stdlib.h>

void beej_print_data(void)
{
    struct block *b = head;

    if (b == NULL) {
        printf("[empty]\n");
        return;
    }

    while (b != NULL) {
        //printf("[%p:%d,%s]", b, b->size, b->in_use? "used": "free");
        printf("[%d,%s]", b->size, b->in_use? "used": "free");
        if (b->next != NULL) {
            printf(" -> ");
        }
        fflush(stdout);

        b = b->next;
    }

    printf("\n");
}

int main(int argc, char *argv[])
{
    if (argc == 1) {
        fprintf(stderr, "usage: %s mode\n", argv[0]);
        return 1;
    }

    int mode = atoi(argv[1]);

    switch (mode) {

#if WEEK >= 1

        case 0: {  // WEEK 1+
            beej_print_data();
            myalloc(64);
            beej_print_data();
        }
        break;

        case 1: {  // WEEK 1+
            void *p;

            beej_print_data();
            p = myalloc(16);
            printf("%p\n", p);
            beej_print_data();
            p = myalloc(16);
            printf("%p\n", p);
            beej_print_data();
        }
        break;

#elif WEEK >= 2

        case 2: {  // WEEK 2+
            void *p;

            myalloc(10);     beej_print_data();
            p = myalloc(20); beej_print_data();
            myalloc(30);     beej_print_data();
            myfree(p);       beej_print_data();
            myalloc(40);     beej_print_data();
            myalloc(10);     beej_print_data();
        }
        break;

        case 3: {
            void *p;

            p = myalloc(512);
            beej_print_data();

            myfree(p);
            beej_print_data();
        }
        break;

        case 4: {
            myalloc(10); beej_print_data();
            myalloc(20); beej_print_data();
            myalloc(30); beej_print_data();
            myalloc(40); beej_print_data();
            myalloc(50); beej_print_data();
        }
        break;

#elif WEEK >= 3

        case 5: { // WEEK 3+
            void *p, *q;

            p = myalloc(512);
            beej_print_data();

            myfree(p);
            beej_print_data();

            p = myalloc(16);
            beej_print_data();

            q = myalloc(128);
            beej_print_data();

            myfree(p);
            beej_print_data();

            char *r = myalloc(100);
            beej_print_data();

            myfree(q);
            beej_print_data();

            myfree(r);
            beej_print_data();
        }
        break;
#endif
        default:
            fprintf(stderr, "%s: unknown mode\n", argv[0]);
            return 2;
    }
}
