#!/bin/sh
#
# Copy runtests, Makefile, new_main.c, and myalloc (binary) to ~/tmp
# where you clone their repos.

TEMP=$$.temp
WEEK=2
PROJ_NUM=7  # 6, 7, 8

cleanup() {
    rm -f *${TEMP}*
}

trap cleanup EXIT

status() {
    printf "===================\n"
    printf "%s\n" "$1"
    printf "===================\n"
}

compare() {
    local ctl exp ctl_out exp_out st

    ctl="$1"
    exp="$2"

    st=$(printf "Running %s" "$exp")
    status "$st"

    ctl_out=ctl.$TEMP.out
    exp_out=exp.$TEMP.out

    eval $ctl > ctl.$TEMP.out
    eval $exp > exp.$TEMP.out

    #echo "----------------"; cat exp.$TEMP.out; echo "----------------"

    diff -w "$ctl_out" "$exp_out"

    cleanup
}

findsource() {
    local sourcename

    sourcename=""

    while [ $# -gt 0 ]; do
        sourcename=$(find . -name $1 2> /dev/null | grep $PROJ_NUM 2> /dev/null)

        if [ -z "$sourcename" ]; then
            sourcename=$(find . -name $1 2> /dev/null)
        fi

        if [ ! -z "$sourcename" ]; then
            echo $sourcename
            return 0
        fi

        shift
    done

    return 1
}

# Add any possible source file names here:
sourcename=$(findsource myalloc.c mylib.c allocator.c memory_manager.c my_malloc.c)

if [ $? -ne 0 ]; then
    printf "%s: can't find the source\n" "$0" 1>&2
    exit 1
fi

progdir=$(dirname "$sourcename")
progname=$(basename "$sourcename" .c)

curdir=$(pwd)

model=$curdir/myalloc   # model solution exe
student=$progdir/$progname

(
    cp $curdir/Makefile $progdir
    cd $progdir

    # Patch the program with new_main.c
    if ! grep -q beej_print_data $progname.c; then
        cp $curdir/new_main.c.txt new_main.c.txt
        cp $progname.c $progname.c.orig
        sed 's/\r$//' $progname.c |
            sed '/int main \?(.*}$/d' |
            sed '/void main \?(.*}$/d' |
            sed '/int main \?(/,/^} *$/d' |
            sed '/void main \?(/,/^} *$/d' > prog.$TEMP.c
        cat prog.$TEMP.c new_main.c.txt > $progname.c
        rm -f *.$TEMP.* new_main.c.txt
    fi
    
    # Build
    make clean
    make CCOPTS='-Wall -Wextra -DWEEK='$WEEK
)

if [ $WEEK -ge 1 ]; then
    compare "$model 0" "$student 0"
    compare "$model 1" "$student 1"
fi

if [ $WEEK -ge 2 ]; then
    compare "$model 2" "$student 2"
    compare "$model 3" "$student 3"
    compare "$model 4" "$student 4"
    compare "$model 5" "$student 5"
    compare "$model 6" "$student 6"
    compare "$model 7" "$student 7"
    compare "$model 8" "$student 8"
    compare "$model 9" "$student 9"
fi

printf "Press RETURN to edit\n"

read dummy

vim $progdir/$progname.c
