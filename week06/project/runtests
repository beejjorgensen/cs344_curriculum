#!/bin/sh
#
# Copy runtests, Makefile, new_main.c, and myalloc (binary) to ~/tmp
# where you clone their repos.

TEMP=$$.temp

cleanup() {
    rm -f *${TEMP}*
}

trap cleanup EXIT

status() {
    printf "===================\n"
    printf "%s\n" "$1"
    printf "===================\n"
}

compare() {
    local ctl exp ctl_out exp_out st

    ctl="$1"
    exp="$2"

    st=$(printf "Running %s" "$exp")
    status "$st"

    ctl_out=ctl.$TEMP.out
    exp_out=exp.$TEMP.out

    eval $ctl > ctl.$TEMP.out
    eval $exp > exp.$TEMP.out

    #echo "----------------"; cat exp.$TEMP.out; echo "----------------"

    diff -w "$ctl_out" "$exp_out"

    cleanup
}

progdir=$(dirname $(find . -name myalloc.c) 2> /dev/null)
progname=myalloc
if [ "x$progdir" = "x" ]; then
    progdir=$(dirname $(find . -name mylib.c) 2> /dev/null)
    if [ "x$progdir" = "x" ]; then
        printf "can't find the source\n" 1>&2
        exit 1
    fi
    progname=mylib
fi

curdir=$(pwd)

model=$curdir/myalloc   # model solution exe
student=$progdir/$progname

(
    cp $curdir/Makefile $progdir
    cd $progdir

    # Patch the program with new_main.c
    if ! grep -q beej_print_data $progname.c; then
        cp $curdir/new_main.c.txt new_main.c.txt
        cp $progname.c $progname.c.orig
        sed '/int main(/,/^} *$/d' $progname.c | sed '/void main(/,/^} *$/d' > prog.$TEMP.c
        cat prog.$TEMP.c new_main.c.txt > $progname.c
        rm -f *.$TEMP.* new_main.c.txt
    fi
    
    # Build
    make clean
    make CCOPTS='-Wall -Wextra -DWEEK=1'
)

compare "$model 0" "$student 0"
compare "$model 1" "$student 1"

printf "Press RETURN to edit\n"

read dummy

vim $progdir/$progname.c
